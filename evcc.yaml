version: "3.9"
name: evcc

x-kraud-ui:
  label: "EVCC - EV Charge Controller with PV integration"
  description: |

    evcc is an extensible EV Charge Controller with PV integration implemented in [Go][2]. Featured in [PV magazine](https://www.pv-magazine.de/2021/01/15/selbst-ist-der-groeoenlandhof-wallbox-ladesteuerung-selbst-gebaut/).

    ![Screenshot](https://raw.githubusercontent.com/evcc-io/evcc/master/docs/screenshot.png)

    ## Features

    - simple and clean user interface
    - wide range of supported [chargers](https://docs.evcc.io/docs/devices/chargers):
      - ABL eMH1, Alfen (Eve), Bender (CC612/613), cFos (PowerBrain), Daheimladen, Ebee (Wallbox), Ensto (Chago Wallbox), [EVSEWifi/ smartWB](https://www.evse-wifi.de), Garo (GLB, GLB+, LS4), go-eCharger, HardyBarth (eCB1, cPH1, cPH2), Heidelberg (Energy Control), Innogy (eBox), Juice (Charger Me), KEBA/BMW, Menneckes (Amedio, Amtron Premium/Xtra, Amtron ChargeConrol), NRGkick, [openWB (includes Pro)](https://openwb.de/), Optec (Mobility One), PC Electric (includes Garo), TechniSat (Technivolt), [Tinkerforge Warp Charger](https://www.warp-charger.com), Ubitricity (Heinz), Vestel, Wallbe, Webasto (Live), Mobile Charger Connect
      - experimental EEBus support (Elli, PMCC)
      - experimental OCPP support
      - Build-your-own: Phoenix (includes ESL Walli), [EVSE DIN](https://www.evse-wifi.de/produkt-schlagwort/simple-evse-wb/)
      - Smart-Home outlets: FritzDECT, Shelly, Tasmota, TP-Link
    - wide range of supported [meters](https://docs.evcc.io/docs/devices/meters) for grid, pv, battery and charger:
      - ModBus: Eastron SDM, MPM3PM, ORNO WE, SBC ALE3 and many more, see <https://github.com/volkszaehler/mbmd#supported-devices> for a complete list
      - Integrated systems: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)
      - Sunspec-compatible inverter or home battery devices: Fronius, SMA, SolarEdge, KOSTAL, STECA, E3DC, ...
      - and various others: Discovergy, Tesla PowerWall, LG ESS HOME, OpenEMS (FENECON)
    - [vehicle](https://docs.evcc.io/docs/devices/vehicles) integration (state of charge, remote charge, battery and preconditioning status):
      - Audi, BMW, CitroÃ«n, Dacia, Fiat, Ford, Hyundai, Jaguar, Kia, Landrover, Mercedes, Mini, Nissan, Opel, Peugeot, Porsche, Renault, Seat, Smart, Skoda, Tesla, Volkswagen, Volvo
      - Services: OVMS, Tronity
      - Scooters: Niu, Silence
    - [plugins](https://docs.evcc.io/docs/reference/plugins) for integrating with any charger/ meter/ vehicle:
      - Modbus, HTTP, MQTT, Javascript, WebSockets and shell scripts
    - status [notifications](https://docs.evcc.io/docs/reference/configuration/messaging) using [Telegram](https://telegram.org), [PushOver](https://pushover.net) and [many more](https://containrrr.dev/shoutrrr/)
    - logging using [InfluxDB](https://www.influxdata.com) and [Grafana](https://grafana.com/grafana/)
    - granular charge power control down to mA steps with supported chargers (labeled by e.g. smartWB als [OLC](https://board.evse-wifi.de/viewtopic.php?f=16&t=187))
    - REST and MQTT [APIs](https://docs.evcc.io/docs/reference/api) for integration with home automation systems
    - HomeAssistant [add-on](https://github.com/evcc-io/evcc-hassio-addon)

  logo_url: "https://github.githubassets.com/images/icons/emoji/unicode/2600.png"
  ext_url: "https://evcc.io/"
  config:
    INGRESS:
      kind: "ingress"
      label: "web interface domain"
      description: "domain where filebrowser will be hosted at"
      protocol: "https"
      default: "evcc.*"
      required: true
    EVCC:
      kind: "volume"
      label: "file storage"
      description: "Volume where we persistent data will be stored"
      required: true
      default: "evcc"

volumes:
  rvcc:
    name: ${EVCC:-evcc}
    driver: rbd

services:
  filebrowser:
    container_name: evcc
    image: andig/evcc
    labels:
      - kr.ingress.7070=${INGRESS:-https://evcc.*}

    volumes:
      - evcc:/root/.evcc
    ports:
      - 80:80

