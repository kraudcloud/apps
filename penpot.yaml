version: "3.9"
name: penpot

x-kraud-ui:
  label: "Penpot \u2013 Open-Source design & prototyping platform"
  description: |
    Penpot is the first Open Source design and prototyping platform meant for cross-domain teams.
    Non dependent on operating systems, Penpot is web based and works with open standards (SVG). 
    Penpot invites designers all over the world to fall in love with open source while 
    getting developers excited about the design process in return.
  logo_url: "https://avatars.githubusercontent.com/u/30179644?s=200&v=4"
  ext_url: "https://penpot.app/"
  config:
    INGRESS:
      kind: "ingress"
      label: "web UI domain"
      description: Domain where the app will be hosted.
      protocol: "https"
      default: "penpot.*"
      required: true

x-env-file: &env_file
  ## Should be set to the public domain where penpot is going to be served.
  ##
  ## NOTE: If you are going to serve it under different domain than
  ## 'localhost' without HTTPS, consider setting the
  ## `disable-secure-session-cookies' flag on the 'PENPOT_FLAGS'
  ## setting.
  - PENPOT_PUBLIC_URI=${INGRESS:-https://penpot.*}

  # DATABASE
  - POSTGRES_INITDB_ARGS=--data-checksums
  - POSTGRES_DB=penpot
  - POSTGRES_USER=penpot
  - POSTGRES_PASSWORD=penpot

  ## Feature flags.
  - PENPOT_FLAGS=enable-registration enable-login disable-email-verification

  ## Temporal workaround because of bad builtin default

  - PENPOT_HTTP_SERVER_HOST=0.0.0.0

  ## Standard database connection parameters (only postgresql is supported):

  - PENPOT_DATABASE_URI=postgresql://penpot-postgres/penpot
  - PENPOT_DATABASE_USERNAME=penpot
  - PENPOT_DATABASE_PASSWORD=penpot

  ## Redis is used for the websockets notifications.
  - PENPOT_REDIS_URI=redis://penpot-redis/0

  ## By default, files uploaded by users are stored in local
  ## filesystem. But it can be configured to store in AWS S3.

  - PENPOT_ASSETS_STORAGE_BACKEND=assets-fs
  - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets

  ## Telemetry. When enabled, a periodical process will send anonymous
  ## data about this instance. Telemetry data will enable us to learn on
  ## how the application is used, based on real scenarios. If you want
  ## to help us, please leave it enabled.

  - PENPOT_TELEMETRY_ENABLED=true

  ## Email sending configuration. By default, emails are printed in the
  ## console, but for production usage is recommended to setup a real
  ## SMTP provider. Emails are used to confirm user registrations.

  - PENPOT_SMTP_DEFAULT_FROM=no-reply@example.com
  - PENPOT_SMTP_DEFAULT_REPLY_TO=no-reply@example.com
  # PENPOT_SMTP_HOST=
  # PENPOT_SMTP_PORT=
  # PENPOT_SMTP_USERNAME=
  # PENPOT_SMTP_PASSWORD=
  # PENPOT_SMTP_TLS=true
  # PENPOT_SMTP_SSL=false

  ## Comma separated list of allowed domains to register. Empty to allow
  ## all.

  # PENPOT_REGISTRATION_DOMAIN_WHITELIST=""

  ## Authentication providers

  ## Google

  # PENPOT_GOOGLE_CLIENT_ID=
  # PENPOT_GOOGLE_CLIENT_SECRET=

  ## GitHub

  # PENPOT_GITHUB_CLIENT_ID=
  # PENPOT_GITHUB_CLIENT_SECRET=

  ## GitLab

  # PENPOT_GITLAB_BASE_URI=https://gitlab.com
  # PENPOT_GITLAB_CLIENT_ID=
  # PENPOT_GITLAB_CLIENT_SECRET=

  ## OpenID Connect (since 1.5.0)

  # PENPOT_OIDC_BASE_URI=
  # PENPOT_OIDC_CLIENT_ID=
  # PENPOT_OIDC_CLIENT_SECRET=

  ## LDAP
  ##
  ## NOTE: to enable ldap, you will need to put 'enable-login-with-ldap'
  ## on the 'PENPOT_FLAGS' environment variable.

  # PENPOT_LDAP_HOST=ldap
  # PENPOT_LDAP_PORT=10389
  # PENPOT_LDAP_SSL=false
  # PENPOT_LDAP_STARTTLS=false
  # PENPOT_LDAP_BASE_DN=ou=people,dc=planetexpress,dc=com
  # PENPOT_LDAP_BIND_DN=cn=admin,dc=planetexpress,dc=com
  # PENPOT_LDAP_BIND_PASSWORD=GoodNewsEveryone
  # PENPOT_LDAP_ATTRS_USERNAME=uid
  # PENPOT_LDAP_ATTRS_EMAIL=mail
  # PENPOT_LDAP_ATTRS_FULLNAME=cn

volumes:
  penpot_postgres_data:
    name: penpot_postgres_data
    driver: "local"
  penpot_assets_data:
    name: penpot_assets_data
    driver: "local"

services:
  penpot-frontend:
    container_name: penpot-frontend
    image: "penpotapp/frontend:latest"
    labels:
      - kr.ingress.80=${INGRESS:-https://penpot.*}
    ports:
      - 80:80
    volumes:
      - penpot_assets_data:/opt/data
    environment: *env_file
    depends_on:
      - penpot-backend
      - penpot-exporter

  penpot-backend:
    container_name: penpot-backend
    image: "penpotapp/backend:latest"
    volumes:
      - penpot_assets_data:/opt/data
    depends_on:
      - penpot-postgres
      - penpot-redis
    environment: *env_file

  penpot-exporter:
    container_name: penpot-exporter
    image: "penpotapp/exporter:latest"
    environment: *env_file

  penpot-postgres:
    container_name: penpot-postgres
    image: "postgres:14"
    restart: always
    environment: *env_file
    volumes:
      - penpot_postgres_data:/var/lib/postgresql/data

  penpot-redis:
    container_name: penpot-redis
    image: redis:7
    restart: always
